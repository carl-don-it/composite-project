/**
 * 解析文本的包，使用多线程
 * <p>
 * 6、	有n个文本文件，每个里面都是英文单词，为简化单词识别，假定每行一个单词。写程序统计出现次数最多的前10名的单词。
 * <p>
 * a)	用多线程改写7中的词统计程序。
 * <p>
 * 运行实例：WordStat.exe d:\w 10，有两个参数，第一个是文本文件所在的目录，目录中的文本文件都参与统计，第二个是线程个数。请按这个命令模式执行，方便做不同的程序、相同的输入数据做效率比较。
 * <p>
 * 这道题有个值得思考的问题：使用多线程，每个线程做的事情如何分配？
 * <p>
 * 扩展思考：假如程序还要同时支持另外两种形式的文本文件词统计，程序结构该如何修改？
 * <p>
 * 形式一：正常的英文文本，非每行一个单词。
 * <p>
 * 形式二：中文文本，统计中文词的频率。假设已经有了中文的分词算法。
 */
package com.don.demo.concurrent.example.textparser;